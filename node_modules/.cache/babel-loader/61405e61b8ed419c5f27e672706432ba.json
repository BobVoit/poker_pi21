{"ast":null,"code":"import { authAPI } from '../api/api';\nconst SET_TOKEN = 'SET_TOKEN';\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  login: null,\n  password: null,\n  nickname: null,\n  money: null,\n  token: null,\n  isAuth: false,\n  error: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TOKEN:\n      {\n        return { ...state,\n          token: action.token\n        };\n      }\n\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          login: action.login,\n          password: action.password,\n          nickname: action.nickname,\n          money: action.isAuth ? Number(action.money) : null,\n          isAuth: action.isAuth\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setToken = token => ({\n  type: SET_TOKEN,\n  token\n});\nexport const setUserData = (login, password, nickname, money, isAuth) => ({\n  type: SET_USER_DATA,\n  login,\n  password,\n  nickname,\n  money,\n  isAuth\n});\nexport const checkIn = (login, password, nickname) => dispatch => {\n  authAPI.checkIn(login, password, nickname).then(response => {\n    if (response.data.result === 'ok') {// написать логику\n    }\n  }).catch(error => {// написать логику\n  });\n};\nexport const login = (login, password) => dispatch => {\n  authAPI.login(login, password).then(response => {\n    if (response.data.result === 'ok') {\n      dispatch(setToken(response.data));\n      dispatch(getUserByToken(response.data.data));\n    }\n  }).catch(error => {// написать логику\n  });\n};\nexport const getUserByToken = token => dispatch => {\n  authAPI.getUserByToken(token).then(response => {\n    console.log(response);\n    let data = response.data.data;\n\n    if (response.data.result === 'ok') {\n      dispatch(setUserData(data.login, data.password, data.nickname, data.money, true));\n    }\n  }).catch(error => {// написать логику\n  });\n};\nexport const logout = token => dispatch => {\n  authAPI.logout(token).then(response => {\n    dispatch(setToken(null));\n    dispatch(setUserData(null, null, null, null, false));\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Картоха/Desktop/Poker/poker_pi21-main/poker_pi21-main/src/redux/authReducer.js"],"names":["authAPI","SET_TOKEN","SET_USER_DATA","initialState","login","password","nickname","money","token","isAuth","error","authReducer","state","action","type","Number","setToken","setUserData","checkIn","dispatch","then","response","data","result","catch","getUserByToken","console","log","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAGA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,IADQ;AAEfC,EAAAA,QAAQ,EAAE,IAFK;AAGfC,EAAAA,QAAQ,EAAE,IAHK;AAIfC,EAAAA,KAAK,EAAE,IAJQ;AAKfC,EAAAA,KAAK,EAAE,IALQ;AAMfC,EAAAA,MAAM,EAAE,KANO;AAOfC,EAAAA,KAAK,EAAE;AAPQ,CAAnB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGW,KADA;AAEHJ,UAAAA,KAAK,EAAEK,MAAM,CAACL;AAFX,SAAP;AAIH;;AACD,SAAKN,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGU,KADA;AAEHR,UAAAA,KAAK,EAAES,MAAM,CAACT,KAFX;AAGHC,UAAAA,QAAQ,EAAEQ,MAAM,CAACR,QAHd;AAIHC,UAAAA,QAAQ,EAAEO,MAAM,CAACP,QAJd;AAKHC,UAAAA,KAAK,EAAGM,MAAM,CAACJ,MAAP,GAAgBM,MAAM,CAACF,MAAM,CAACN,KAAR,CAAtB,GAAuC,IAL5C;AAMHE,UAAAA,MAAM,EAAEI,MAAM,CAACJ;AANZ,SAAP;AAQH;;AACD;AACI,aAAOG,KAAP;AAlBR;AAoBH,CArBD;;AAwBA,OAAO,MAAMI,QAAQ,GAAIR,KAAD,KAAY;AAAEM,EAAAA,IAAI,EAAEb,SAAR;AAAmBO,EAAAA;AAAnB,CAAZ,CAAjB;AAEP,OAAO,MAAMS,WAAW,GAAG,CAACb,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,KAA5B,EAAmCE,MAAnC,MAA+C;AACtEK,EAAAA,IAAI,EAAEZ,aADgE;AAEtEE,EAAAA,KAFsE;AAGtEC,EAAAA,QAHsE;AAItEC,EAAAA,QAJsE;AAKtEC,EAAAA,KALsE;AAMtEE,EAAAA;AANsE,CAA/C,CAApB;AAUP,OAAO,MAAMS,OAAO,GAAG,CAACd,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAAgCa,QAAD,IAAc;AAChEnB,EAAAA,OAAO,CAACkB,OAAR,CAAgBd,KAAhB,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2Cc,IAA3C,CAAiDC,QAAD,IAAc;AAC1D,QAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA7B,EAAmC,CAC/B;AACH;AACJ,GAJD,EAKCC,KALD,CAKQd,KAAD,IAAW,CACd;AACH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMN,KAAK,GAAG,CAACA,KAAD,EAAQC,QAAR,KAAsBc,QAAD,IAAc;AACpDnB,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd,EAAqBC,QAArB,EACKe,IADL,CACWC,QAAD,IAAc;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA7B,EAAmC;AAC/BJ,MAAAA,QAAQ,CAACH,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAT,CAAR;AACAH,MAAAA,QAAQ,CAACM,cAAc,CAACJ,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAf,CAAR;AACH;AACJ,GANL,EAOKE,KAPL,CAOWd,KAAK,IAAI,CACZ;AACH,GATL;AAUH,CAXM;AAaP,OAAO,MAAMe,cAAc,GAAIjB,KAAD,IAAYW,QAAD,IAAc;AACnDnB,EAAAA,OAAO,CAACyB,cAAR,CAAuBjB,KAAvB,EACKY,IADL,CACUC,QAAQ,IAAI;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,QAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcA,IAAzB;;AACA,QAAID,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA7B,EAAmC;AAC/BJ,MAAAA,QAAQ,CAACF,WAAW,CAACK,IAAI,CAAClB,KAAN,EAAakB,IAAI,CAACjB,QAAlB,EAA4BiB,IAAI,CAAChB,QAAjC,EAA2CgB,IAAI,CAACf,KAAhD,EAAuD,IAAvD,CAAZ,CAAR;AACH;AACJ,GAPL,EAQKiB,KARL,CAQWd,KAAK,IAAI,CACZ;AACH,GAVL;AAWH,CAZM;AAcP,OAAO,MAAMkB,MAAM,GAAIpB,KAAD,IAAYW,QAAD,IAAc;AAC3CnB,EAAAA,OAAO,CAAC4B,MAAR,CAAepB,KAAf,EAAsBY,IAAtB,CAA2BC,QAAQ,IAAI;AACnCF,IAAAA,QAAQ,CAACH,QAAQ,CAAC,IAAD,CAAT,CAAR;AACAG,IAAAA,QAAQ,CAACF,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CAAZ,CAAR;AACH,GAHD;AAIH,CALM;AAOP,eAAeN,WAAf","sourcesContent":["import { authAPI } from '../api/api';\n\n\nconst SET_TOKEN = 'SET_TOKEN';\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    login: null,\n    password: null,\n    nickname: null,\n    money: null,\n    token: null,\n    isAuth: false,\n    error: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TOKEN: {\n            return {\n                ...state,\n                token: action.token\n            }\n        } \n        case SET_USER_DATA: {\n            return {\n                ...state,\n                login: action.login,\n                password: action.password,\n                nickname: action.nickname,\n                money: (action.isAuth ? Number(action.money) : null),\n                isAuth: action.isAuth,\n            }\n        }\n        default: \n            return state;\n    }\n}\n\n\nexport const setToken = (token) => ({ type: SET_TOKEN, token })\n\nexport const setUserData = (login, password, nickname, money, isAuth) => ({\n    type: SET_USER_DATA,\n    login,\n    password,\n    nickname,\n    money,\n    isAuth\n})\n\n\nexport const checkIn = (login, password, nickname) => (dispatch) => {\n    authAPI.checkIn(login, password, nickname).then((response) => {\n        if (response.data.result === 'ok') {\n            // написать логику\n        }\n    })\n    .catch((error) => {\n        // написать логику\n    })\n}\n\nexport const login = (login, password) => (dispatch) => {\n    authAPI.login(login, password)\n        .then((response) => {\n            if (response.data.result === 'ok') {\n                dispatch(setToken(response.data));\n                dispatch(getUserByToken(response.data.data));\n            }\n        })\n        .catch(error => {\n            // написать логику\n        })\n}\n\nexport const getUserByToken = (token) => (dispatch) => {\n    authAPI.getUserByToken(token)\n        .then(response => {\n            console.log(response);\n            let data = response.data.data;\n            if (response.data.result === 'ok') {\n                dispatch(setUserData(data.login, data.password, data.nickname, data.money, true));\n            }\n        })\n        .catch(error => {\n            // написать логику\n        })\n}\n\nexport const logout = (token) => (dispatch) => {\n    authAPI.logout(token).then(response => {\n        dispatch(setToken(null));\n        dispatch(setUserData(null, null, null, null, false))\n    })\n}\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}